<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2018-2022, Andrew Lindesay
  ~ Distributed under the terms of the MIT License.
  -->

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.0" xml:id="overview">

    <title>Overview and General Information</title>

    <section xml:id="overview-introduction">
        <title>Introduction</title>
        <para>
            These documents relate to an &quot;application-server&quot; called &quot;Haiku Depot Server&quot; which vends
            an internet application that stores and allows interaction with software packages for the
            <ulink url="http://www.haiku-os.org">Haiku Operating System</ulink>
        </para>

        <para>
            The application server is able to communicate with remote repositories to retrieve &quot;Haiku Package
            Repository&quot; (.hpkr) files.  .hpkr files contain meta-data of the packages that are stored at that
            repository.  The application server is able to consume the .hpkr data and populate its own internal database
            with some of the meta-data that it contains.  THe .hpkr format is a binary data structure described
            <ulink url="https://dev.haiku-os.org/wiki/PackageManagement/FileFormat">here</ulink>.
        </para>

        <para>
            The application-server then provides an HTTP-vended API as well as a web user-interface to the data.
            The application server is also intended to interact with a desktop client also called &quot;Haiku Depot&quot;.
            The system augments the information acquired from the .hpkr data with additional detail such as;

            <itemizedlist>
                <listitem>Screenshots</listitem>
                <listitem>Icons</listitem>
                <listitem>Comments</listitem>
            </itemizedlist>

        </para>
    </section>

    <section xml:id="overview-icon">
        <title>Icon</title>
        <para>
            The icon for this project has been copied from the HaikuDepot application in the Haiku source code
            repository and converted into SVG and PDF where appropriate.  Details of this are in the
            &quot;haikudepotserver-webapp&quot; project as a &quot;README.TXT&quot; file.
        </para>
    </section>

    <section xml:id="overview-source">
        <title>Hosted Source Code</title>
        <para>
            The source code is hosted at
            <ulink url="https://github.com/haiku/haikudepotserver">GitHub</ulink>
        </para>
    </section>

    <section xml:id="overview-prerequisites">
        <title>Prerequisites</title>

        <para>
            <itemizedlist>
                <listitem><ulink url="https://community.java.net/open-jdk">Java</ulink> (&gt;= 11)</listitem>
                <listitem><ulink url="http://maven.apache.org">Maven</ulink> (&gt;= 3.6)</listitem>
                <listitem><ulink url="https://www.postgres.org">Postgres</ulink> (&gt;= 11)</listitem>
                <listitem><ulink url="http://www.eclipse.org/jetty/documentation/current/runner.html">Jetty Runner</ulink> (&gt;= 9.4) (deployment)</listitem>
                <listitem><ulink url="https://www.docker.com/">Docker</ulink></listitem>
            </itemizedlist>
        </para>

        <para>On a debian host, some of these prerequisites can be installed with;</para>

        <para>
            <programlisting>apt-get install default-jdk
apt-get install maven
apt-get install postgresql postgresql-client</programlisting>
        </para>

        <para>
            You can
            <ulink url="http://mvnrepository.com/artifact/org.eclipse.jetty/jetty-runner">download</ulink>
            the Jetty Runner jar file from the Maven Repository.
        </para>

        <section xml:id="overview-prerequisites-buildingonlinux">
            <title>Building on Linux</title>

            <para>The build system for a linux host requires the presence of RPM assembly tools.</para>

            <informaltable>
                <tgroup cols="2">
                    <tbody>
                        <row>
                            <entry>RPM-based Linux</entry>
                            <entry>yum install rpm-build</entry>
                        </row>
                        <row>
                            <entry>Debian-based Linux</entry>
                            <entry>apt-get install rpm</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
        </section>

        <section xml:id="overview-prerequisites-basicpostgressetup">
            <title>Basic Postgres Setup</title>

            <para>
                The setup discussed here is <emphasis>very simplistic</emphasis> as it is not possible to envisage
                all of the possible
                environmental factors involved in a production deployment.  By this point, the Postgres database server
                is installed on a UNIX-like computer system and is running as the system user &quot;postgres&quot;.
            </para>

            <para>
                To get the Postgres database server to listen on an internet socket, uncomment the
                &quot;postgresql.conf&quot; file line;
            </para>

            <para>
                <programlisting>listen_address = 'localhost'</programlisting>
            </para>

            <para>
                In order to get connections to localhost to take authentication via username and password, edit the
                table at the end of the &quot;pg_hba.conf&quot; file by modifying the &quot;METHOD&quot; column for
                rows pertaining to the localhost; change &quot;ident&quot; to &quot;md5&quot;.
            </para>

            <para>The Postgres database server should then be restarted.</para>

            <para>Create a new database user with the following command;</para>

            <para>
                <programlisting>sudo -u postgres createuser -P -E haikudepotserver</programlisting>
            </para>

            <para>Now create the new database;</para>

            <para>
                <programlisting>sudo -u postgres createdb -O haikudepotserver haikudepotserver</programlisting>
            </para>

            <para>You can check the login to the database works by opening a SQL terminal;</para>

            <para>
                <programlisting>psql -h localhost -U haikudepotserver haikudepotserver</programlisting>
            </para>

            <para>
                The database schema objects will be automatically populated into the fresh database by the
                application-server as it launches.  This technique uses
                <ulink url="https://flywaydb.org/">Flyway</ulink>.
            </para>

        </section>

        <section xml:id="overview-prerequisites-hvif2png">
        <title>hvif2png Rendering Tool</title>

            <para>
                Software on the Haiku operating system uses the HVIF file format for representing icons.  This
                format is vector-art based rather than bitmaps.  To render icons clearly at any size, Haiku Depot
                Server uses an external tool to render the HVIF data into PNG images for display on the web browser.
                Part of the <ulink url="https://www.haiku-os.org/development">Haiku Source Code</ulink> includes
                a tool called &quot;hvif2png&quot; that can be used for this purpose.
            </para>
            <para>
                Work through building Haiku operating system from source and then build the hvif2png tool using
                &quot;jam -q &quot;&lt;build&gt;hvif2png&quot;.  Note that you may need to install the
                &quot;libpng&quot; libraries for this to build and yield the hvif2png tool as a
                build artifact.  The build product in this case will be a binary for the build host.
            </para>
            <para>
                To install this on a development or deployment host, you will either need to
                generate an RPM package for installation into an RPM-based linux environment or a tar-ball to install
                onto other *NIX like environments such as MacOS-X or debian.  The two scripts that yield the RPM or
                tar-ball are included in the Haiku Depot Server source at;
            </para>

            <para>
                <itemizedlist>
                    <listitem>support/buildhvif2pngrpm.sh</listitem>
                    <listitem>support/buildhvif2pngtarball.sh</listitem>
                </itemizedlist>
            </para>

            <para>
                The only argument to these scripts is the &quot;generated&quot; directory where the Haiku operating
                system build products are situated.  It will yield a tar-ball or RPM in the generated directory in the
                &quot;tmp&quot; directory.  The tarball can be unpacked anywhere on the target deployment or
                development host.  The RPM deploys to &quot;/opt/hvif2png/...&quot; on the machine where it is
                installed.
            </para>

            <para>
                You can
                <link linkend="config-general-hvif2png">configure</link>
                Haiku Depot Server to then use the deployed hvif2png tool.
            </para>

        </section>

    </section>

</chapter>
